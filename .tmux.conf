###########################################################################
#
# ~/.tmux.conf
#

###################################################
# References
###################################################
# https://jonasjacek.github.io/colors/
#
#

###################################################
# Config
###################################################

PANE_BG_ACTIVE="#222222"
PANE_BG="#444444"

PANE_BORDER_COLOR_ACTIVE="#9999ff"
PANE_BORDER_COLOR="#888888"


###################################################
# Theme
###################################################
# Notes
# - Some colors are expressed as hex. But terminals support
#   a limited set of color. When using hex Tmux will select
#   color closest to the hex value.

# Set theme of the bottom status bar (The one with the list of windows)
setw -g window-status-current-fg '#ffffff' # text color of active window
setw -g window-status-current-bg '#ff0000' # background of active window
setw -g window-status-current-attr bright  # or 'underscore'
set -g status-bg colour024    # Base background color of the status bar
set -g status-fg white        # Text color of not-active window

# Set color of the selected (Active) and not selected pane
# Applying a small background difference here helps user to
# distinguish which one, of many terminals, is the active one.
set -g window-active-style 'fg=colour250,bg='$PANE_BG_ACTIVE
set -g window-style 'fg=colour247,bg='$PANE_BG

# Borders around active pane (it should stand out)
set-option -g pane-active-border-bg $PANE_BG_ACTIVE   # should match window-active-style bg
set-option -g pane-active-border-fg $PANE_BORDER_COLOR_ACTIVE

# Border around non-active pane
set-option -g pane-border-bg $PANE_BG # should match window-style bg
set-option -g pane-border-fg $PANE_BORDER_COLOR

# Clock color
set-window-option -g clock-mode-colour green # Green

# Content of the bottom-right of the screen
set -g status-right '#(hostname):#(pwd) #[default] #[fg=white]%Y-%m-%d %H:%M:%S #[default]'

###################################################
# Key Bindings
###################################################


# Set ctrl-a for to be the tmux prefix shortcut
# Best to configre capslock to work as control
set -g prefix C-a
unbind C-b  # unbind the default prefix


# Dump content of the buffer to a local textfile
bind -n M-C display "Dumping buffer to file 'temp-tmux-dump'"\; run-shell "tmux capture-pane -pS -1000000 > ~/temp-tmux-dump" 
# As above, but also open it in an editor (only makes sense if you're running tmux locally (or via 'ssh -X))
bind -n M-B display "Dumping buffer to file 'temp-tmux-dump'"\; run-shell "tmux capture-pane -pS -1000000 > ~/temp-tmux-dump && kate temp-tmux-dump &" 


# Allows e.g. running screen under tmux ('screen' also uses C-a prefix)
# Thanks to this, if the prefix key is pressed twice, tmux forwards it to the terminal
bind C-a send-prefix

# Mouse control
# Enable to be able to scroll pane with a mouse wheel, 
# but that comes at a comes of being able to copy to clipboard with the mouse.
#set -g mouse on

# To make the status bar refresh automatically
set-option -g status-interval 1

# F5 to reload the config
bind -n F5 source-file ~/.tmux.conf\; display "Reloaded config"

# Synchronize all panes (type in many windows at once)
unbind C-p
bind C-p setw synchronize-panes \; run-shell 'tmux display-message "Set option: synchronize-panes -> $(tmux showw -v synchronize-panes)"'

# Command history
set -g history-limit 50000


# Bell
#set-window-option -g window-status-bell-style fg=black,bg=red #base02, red


# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'


# Serach ighlight  ????
#set -ga terminal-overrides ',*:sitm@,ritm@'
set -g terminal-overrides 'rxvt-unicode*:sitm@,ritm@'


# set window base index, zero is hard to reach 
set -g base-index 1

####################################################
# Pane/window navigation - make it vim-like
####################################################
# bind -n    <--- do not require prefix key at all
# bind -r    <--- allow for repeating the keypress without needing to press the prefix key each time
# bind -n M-I   <- uppercase letter indicates shift, so 'M-I' -> 'alt+shift+m'

# (no prefix) pane navigation - tmux like
bind -n M-k   select-pane -D
bind -n M-i   select-pane -U
bind -n M-j   select-pane -L
bind -n M-l   select-pane -R

# Pane resize - tmux like
bind -r M-k     resize-pane -D 5
bind -r M-i     resize-pane -U 5
bind -r M-j     resize-pane -L 15
bind -r M-l     resize-pane -R 15

# Move active pane around
# Note: tmux does not easily allow swapping planed left/right.
# But supposedly this can hack around this limitation:  #bind -n M-J-{ select-pane -L \; swap-pane -s '!'
bind -n M-K  swap-pane -D
bind -n M-I  swap-pane -U 


# Window (tab) navigation, tmux like
bind -n M-J  previous-window
bind -n M-L  next-window

unbind p

# ove windows around
bind -n C-h swap-window -t -1

# Rotate between blayouts
bind -r C-Space next-layout


####################################################
# Other 
####################################################


# window split
bind-key | split-window -h

set-option -g xterm-keys on
#xterm-screen-256color|GNU Screen with 256 colors bce and tmux xterm-keys,

setw -g mode-keys vi

# Monitor for activity
setw -g monitor-activity on


# No delay for escape key press
#set -sg escape-time 0
# don't rename windows automatically

# Tmux likes to rename them
set-option -g allow-rename off

# Rename window
bind-key n      command-prompt 'rename-window %%'


# Per pane info
set -g pane-border-status bottom

# Other data:
#    #{pane_index}      <- index of the pane
#    #T                 <- custom title set via a:     printf "\033]2;FOOBAR\033\\"     (can be set from remote host)
set -g pane-border-format "  #T (#{pane_current_command})  "

